{"ast":null,"code":"var _jsxFileName = \"/Users/karelloxmutombox/Desktop/OwnP/faces/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Navigation from './Components/Navigation/Navigation'; // import Signin from './Components/Signin/Signin';\n// import Register from './Components/Register/Register';\n\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '70fe6fbd88a24d6f9b0eec57344e0929'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      console.log('click');\n      app.models.predict(clarifai.COLOR_MODEL, \"https://samples.clarifai.com/face-det.jpg\").then(function (response) {\n        console.log(response);\n      }, function (err) {// there was an error\n      });\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // //You must add your own API key here from Clarifai.\n// const app = new Clarifai.App({\n//  apiKey: '70fe6fbd88a24d6f9b0eec57344e0929'\n// });\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       input: '',\n//       imageUrl: '',\n//       box: {},\n//       route: 'signin',\n//       isSignedIn: false,\n//       user: {\n//         id: '',\n//         name: '',\n//         email: '',\n//         entries: 0,\n//         joined: ''\n//       }\n//     }\n//   }\n//   loadUser = (data) => {\n//     this.setState({user: {\n//       id: data.id,\n//       name: data.name,\n//       email: data.email,\n//       entries: data.entries,\n//       joined: data.joined\n//     }})\n//   }\n//   calculateFaceLocation = (data) => {\n//     const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n//     const image = document.getElementById('inputimage');\n//     const width = Number(image.width);\n//     const height = Number(image.height);\n//     return {\n//       leftCol: clarifaiFace.left_col * width,\n//       topRow: clarifaiFace.top_row * height,\n//       rightCol: width - (clarifaiFace.right_col * width),\n//       bottomRow: height - (clarifaiFace.bottom_row * height)\n//     }\n//   }\n//   displayFaceBox = (box) => {\n//     this.setState({box: box});\n//   }\n//   onInputChange = (event) => {\n//     this.setState({input: event.target.value});\n//   }\n//   onButtonSubmit = () => {\n//     this.setState({imageUrl: this.state.input});\n//     app.models\n//       .predict(\n//         Clarifai.FACE_DETECT_MODEL,\n//         this.state.input)\n//       .then(response => {\n//         if (response) {\n//           fetch('http://localhost:3000/image', {\n//             method: 'put',\n//             headers: {'Content-Type': 'application/json'},\n//             body: JSON.stringify({\n//               id: this.state.user.id\n//             })\n//           })\n//             .then(response => response.json())\n//             .then(count => {\n//               this.setState(Object.assign(this.state.user, { entries: count}))\n//             })\n//         }\n//         this.displayFaceBox(this.calculateFaceLocation(response))\n//       })\n//       .catch(err => console.log(err));\n//   }\n//   onRouteChange = (route) => {\n//     if (route === 'signout') {\n//       this.setState({isSignedIn: false})\n//     } else if (route === 'home') {\n//       this.setState({isSignedIn: true})\n//     }\n//     this.setState({route: route});\n//   }\n//   render() {\n//     const { isSignedIn, imageUrl, route, box } = this.state;\n//     return (\n//       <div className=\"App\">\n//          <Particles className='particles'\n//           params={particlesOptions}\n//         />\n//         <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n//         { route === 'home'\n//           ? <div>\n//               <Logo />\n//               <Rank\n//                 name={this.state.user.name}\n//                 entries={this.state.user.entries}\n//               />\n//               <ImageLinkForm\n//                 onInputChange={this.onInputChange}\n//                 onButtonSubmit={this.onButtonSubmit}\n//               />\n//               <FaceRecognition box={box} imageUrl={imageUrl} />\n//             </div>\n//           : (\n//              route === 'signin'\n//              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n//              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n//             )\n//         }\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/karelloxmutombox/Desktop/OwnP/faces/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","onInputChange","event","console","log","target","onButtonSubmit","models","predict","clarifai","COLOR_MODEL","then","response","err","state","input","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;AAGA,MAAMC,GAAG,GAAG,IAAIN,QAAQ,CAACO,GAAb,CAAiB;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAAjB,CAAZ;AAMA,MAAMC,gBAAgB,GAAI;AACnBC,EAAAA,SAAS,EAAE;AACVC,IAAAA,MAAM,EAAE;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAE;AACRC,QAAAA,MAAM,EAAE,IADA;AAERC,QAAAA,UAAU,EAAE;AAFJ;AAFF;AADE;AADQ,CAA1B;;AAcA,MAAMR,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BkB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOhBC,aAPgB,GAOCC,KAAD,IAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaT,KAAzB;AACA,KATe;;AAAA,SAWhBU,cAXgB,GAWC,MAAM;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAd,MAAAA,GAAG,CAACiB,MAAJ,CAAWC,OAAX,CACCC,QAAQ,CAACC,WADV,EAEC,2CAFD,EAGCC,IAHD,CAIG,UAASC,QAAT,EAAmB;AACjBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACD,OANJ,EAOG,UAASC,GAAT,EAAc,CACZ;AACD,OATJ;AAWA,KAxBe;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGH;;AAqBCC,EAAAA,MAAM,GAAG;AACL,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AACA,MAAA,MAAM,EAAEvB,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,EAOE,oBAAC,aAAD;AACA,MAAA,aAAa,EAAE,KAAKQ,aADpB;AAEA,MAAA,cAAc,EAAE,KAAKK,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAYE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADA;AAiBH;;AA7CyB;;AAgD5B,eAAef,GAAf,C,CAMA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Navigation from './Components/Navigation/Navigation';\n// import Signin from './Components/Signin/Signin';\n// import Register from './Components/Register/Register';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n apiKey: '70fe6fbd88a24d6f9b0eec57344e0929'\n});\n\n\n\nconst particlesOptions =  {\n      \tparticles: {\n      \t\tnumber: {\n      \t\t\tvalue: 30,\n      \t\t\tdensity: {\n      \t\t\t\tenable: true,\n      \t\t\t\tvalue_area: 200\n      \t\t\t}\n      \t\t}\n      \t}\n      }\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n  }\n}\n\nonInputChange = (event) => {\n\tconsole.log(event.target.value);\n} \n\nonButtonSubmit = () => {\n\tconsole.log('click');\n\tapp.models.predict(\n\t\tclarifai.COLOR_MODEL, \n\t\t\"https://samples.clarifai.com/face-det.jpg\")\n\t.then(\n    function(response) {\n      console.log(response);\n    },\n    function(err) {\n      // there was an error\n    }\n  );\n}\n\n  render() {\n      return (\n      <div className=\"App\">\n      <Particles className='particles'\n      params={particlesOptions}\n      />\n        <Navigation />\n        <Logo />\n         <Rank />\n        <ImageLinkForm \n        onInputChange={this.onInputChange}\n        onButtonSubmit={this.onButtonSubmit}\n        />\n\n        <FaceRecognition />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n// //You must add your own API key here from Clarifai.\n// const app = new Clarifai.App({\n//  apiKey: '70fe6fbd88a24d6f9b0eec57344e0929'\n// });\n\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       input: '',\n//       imageUrl: '',\n//       box: {},\n//       route: 'signin',\n//       isSignedIn: false,\n//       user: {\n//         id: '',\n//         name: '',\n//         email: '',\n//         entries: 0,\n//         joined: ''\n//       }\n//     }\n//   }\n\n//   loadUser = (data) => {\n//     this.setState({user: {\n//       id: data.id,\n//       name: data.name,\n//       email: data.email,\n//       entries: data.entries,\n//       joined: data.joined\n//     }})\n//   }\n\n//   calculateFaceLocation = (data) => {\n//     const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n//     const image = document.getElementById('inputimage');\n//     const width = Number(image.width);\n//     const height = Number(image.height);\n//     return {\n//       leftCol: clarifaiFace.left_col * width,\n//       topRow: clarifaiFace.top_row * height,\n//       rightCol: width - (clarifaiFace.right_col * width),\n//       bottomRow: height - (clarifaiFace.bottom_row * height)\n//     }\n//   }\n\n//   displayFaceBox = (box) => {\n//     this.setState({box: box});\n//   }\n\n//   onInputChange = (event) => {\n//     this.setState({input: event.target.value});\n//   }\n\n//   onButtonSubmit = () => {\n//     this.setState({imageUrl: this.state.input});\n//     app.models\n//       .predict(\n//         Clarifai.FACE_DETECT_MODEL,\n//         this.state.input)\n//       .then(response => {\n//         if (response) {\n//           fetch('http://localhost:3000/image', {\n//             method: 'put',\n//             headers: {'Content-Type': 'application/json'},\n//             body: JSON.stringify({\n//               id: this.state.user.id\n//             })\n//           })\n//             .then(response => response.json())\n//             .then(count => {\n//               this.setState(Object.assign(this.state.user, { entries: count}))\n//             })\n\n//         }\n//         this.displayFaceBox(this.calculateFaceLocation(response))\n//       })\n//       .catch(err => console.log(err));\n//   }\n\n//   onRouteChange = (route) => {\n//     if (route === 'signout') {\n//       this.setState({isSignedIn: false})\n//     } else if (route === 'home') {\n//       this.setState({isSignedIn: true})\n//     }\n//     this.setState({route: route});\n//   }\n\n//   render() {\n//     const { isSignedIn, imageUrl, route, box } = this.state;\n//     return (\n//       <div className=\"App\">\n//          <Particles className='particles'\n//           params={particlesOptions}\n//         />\n//         <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n//         { route === 'home'\n//           ? <div>\n//               <Logo />\n//               <Rank\n//                 name={this.state.user.name}\n//                 entries={this.state.user.entries}\n//               />\n//               <ImageLinkForm\n//                 onInputChange={this.onInputChange}\n//                 onButtonSubmit={this.onButtonSubmit}\n//               />\n//               <FaceRecognition box={box} imageUrl={imageUrl} />\n//             </div>\n//           : (\n//              route === 'signin'\n//              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n//              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n//             )\n//         }\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}